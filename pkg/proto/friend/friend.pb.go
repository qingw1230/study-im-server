// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: friend/friend.proto

package friend

import (
	public "github.com/qingw1230/study-im-server/pkg/proto/public"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUserID   string `protobuf:"bytes,1,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	FromUserID string `protobuf:"bytes,2,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,3,opt,name=ToUserID,proto3" json:"ToUserID,omitempty"`
}

func (x *CommonID) Reset() {
	*x = CommonID{}
	mi := &file_friend_friend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonID) ProtoMessage() {}

func (x *CommonID) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonID.ProtoReflect.Descriptor instead.
func (*CommonID) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{0}
}

func (x *CommonID) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *CommonID) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *CommonID) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

type AddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonID *CommonID `protobuf:"bytes,1,opt,name=CommonID,proto3" json:"CommonID,omitempty"`
	ReqMsg   string    `protobuf:"bytes,2,opt,name=ReqMsg,proto3" json:"ReqMsg,omitempty"`
}

func (x *AddFriendReq) Reset() {
	*x = AddFriendReq{}
	mi := &file_friend_friend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendReq) ProtoMessage() {}

func (x *AddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendReq.ProtoReflect.Descriptor instead.
func (*AddFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{1}
}

func (x *AddFriendReq) GetCommonID() *CommonID {
	if x != nil {
		return x.CommonID
	}
	return nil
}

func (x *AddFriendReq) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

type AddFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *public.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddFriendResp) Reset() {
	*x = AddFriendResp{}
	mi := &file_friend_friend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResp) ProtoMessage() {}

func (x *AddFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResp.ProtoReflect.Descriptor instead.
func (*AddFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{2}
}

func (x *AddFriendResp) GetCommonResp() *public.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddFriendResponseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonID     *CommonID `protobuf:"bytes,1,opt,name=CommonID,proto3" json:"CommonID,omitempty"`
	HandleResult int32     `protobuf:"varint,2,opt,name=HandleResult,proto3" json:"HandleResult,omitempty"`
	HandleMsg    string    `protobuf:"bytes,3,opt,name=HandleMsg,proto3" json:"HandleMsg,omitempty"`
}

func (x *AddFriendResponseReq) Reset() {
	*x = AddFriendResponseReq{}
	mi := &file_friend_friend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendResponseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponseReq) ProtoMessage() {}

func (x *AddFriendResponseReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponseReq.ProtoReflect.Descriptor instead.
func (*AddFriendResponseReq) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{3}
}

func (x *AddFriendResponseReq) GetCommonID() *CommonID {
	if x != nil {
		return x.CommonID
	}
	return nil
}

func (x *AddFriendResponseReq) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *AddFriendResponseReq) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

type AddFriendResponseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *public.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddFriendResponseResp) Reset() {
	*x = AddFriendResponseResp{}
	mi := &file_friend_friend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendResponseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponseResp) ProtoMessage() {}

func (x *AddFriendResponseResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponseResp.ProtoReflect.Descriptor instead.
func (*AddFriendResponseResp) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{4}
}

func (x *AddFriendResponseResp) GetCommonResp() *public.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonID *CommonID `protobuf:"bytes,1,opt,name=CommonID,proto3" json:"CommonID,omitempty"`
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	mi := &file_friend_friend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFriendReq) GetCommonID() *CommonID {
	if x != nil {
		return x.CommonID
	}
	return nil
}

type DeleteFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *public.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteFriendResp) Reset() {
	*x = DeleteFriendResp{}
	mi := &file_friend_friend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResp) ProtoMessage() {}

func (x *DeleteFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResp.ProtoReflect.Descriptor instead.
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFriendResp) GetCommonResp() *public.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonID *CommonID `protobuf:"bytes,1,opt,name=CommonID,proto3" json:"CommonID,omitempty"`
}

func (x *GetFriendListReq) Reset() {
	*x = GetFriendListReq{}
	mi := &file_friend_friend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListReq) ProtoMessage() {}

func (x *GetFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListReq.ProtoReflect.Descriptor instead.
func (*GetFriendListReq) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{7}
}

func (x *GetFriendListReq) GetCommonID() *CommonID {
	if x != nil {
		return x.CommonID
	}
	return nil
}

type GetFriendListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *public.CommonResp   `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	FriendInfoList []*public.FriendInfo `protobuf:"bytes,2,rep,name=FriendInfoList,proto3" json:"FriendInfoList,omitempty"`
}

func (x *GetFriendListResp) Reset() {
	*x = GetFriendListResp{}
	mi := &file_friend_friend_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListResp) ProtoMessage() {}

func (x *GetFriendListResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_friend_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListResp.ProtoReflect.Descriptor instead.
func (*GetFriendListResp) Descriptor() ([]byte, []int) {
	return file_friend_friend_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendListResp) GetCommonResp() *public.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetFriendListResp) GetFriendInfoList() []*public.FriendInfo {
	if x != nil {
		return x.FriendInfoList
	}
	return nil
}

var File_friend_friend_proto protoreflect.FileDescriptor

var file_friend_friend_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x1a,
	0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x71, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67,
	0x22, 0x4e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x88, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x56, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x41, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a,
	0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x99, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xad, 0x02, 0x0a, 0x06, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x69, 0x6e, 0x67, 0x77, 0x31, 0x32, 0x33,
	0x30, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x2d, 0x69, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_friend_friend_proto_rawDescOnce sync.Once
	file_friend_friend_proto_rawDescData = file_friend_friend_proto_rawDesc
)

func file_friend_friend_proto_rawDescGZIP() []byte {
	file_friend_friend_proto_rawDescOnce.Do(func() {
		file_friend_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_friend_friend_proto_rawDescData)
	})
	return file_friend_friend_proto_rawDescData
}

var file_friend_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_friend_friend_proto_goTypes = []any{
	(*CommonID)(nil),              // 0: pbFriend.CommonID
	(*AddFriendReq)(nil),          // 1: pbFriend.AddFriendReq
	(*AddFriendResp)(nil),         // 2: pbFriend.AddFriendResp
	(*AddFriendResponseReq)(nil),  // 3: pbFriend.AddFriendResponseReq
	(*AddFriendResponseResp)(nil), // 4: pbFriend.AddFriendResponseResp
	(*DeleteFriendReq)(nil),       // 5: pbFriend.DeleteFriendReq
	(*DeleteFriendResp)(nil),      // 6: pbFriend.DeleteFriendResp
	(*GetFriendListReq)(nil),      // 7: pbFriend.GetFriendListReq
	(*GetFriendListResp)(nil),     // 8: pbFriend.GetFriendListResp
	(*public.CommonResp)(nil),     // 9: server_api_params.CommonResp
	(*public.FriendInfo)(nil),     // 10: server_api_params.FriendInfo
}
var file_friend_friend_proto_depIdxs = []int32{
	0,  // 0: pbFriend.AddFriendReq.CommonID:type_name -> pbFriend.CommonID
	9,  // 1: pbFriend.AddFriendResp.CommonResp:type_name -> server_api_params.CommonResp
	0,  // 2: pbFriend.AddFriendResponseReq.CommonID:type_name -> pbFriend.CommonID
	9,  // 3: pbFriend.AddFriendResponseResp.CommonResp:type_name -> server_api_params.CommonResp
	0,  // 4: pbFriend.DeleteFriendReq.CommonID:type_name -> pbFriend.CommonID
	9,  // 5: pbFriend.DeleteFriendResp.CommonResp:type_name -> server_api_params.CommonResp
	0,  // 6: pbFriend.GetFriendListReq.CommonID:type_name -> pbFriend.CommonID
	9,  // 7: pbFriend.GetFriendListResp.CommonResp:type_name -> server_api_params.CommonResp
	10, // 8: pbFriend.GetFriendListResp.FriendInfoList:type_name -> server_api_params.FriendInfo
	1,  // 9: pbFriend.Friend.AddFriend:input_type -> pbFriend.AddFriendReq
	3,  // 10: pbFriend.Friend.AddFriendResponse:input_type -> pbFriend.AddFriendResponseReq
	5,  // 11: pbFriend.Friend.DeleteFriend:input_type -> pbFriend.DeleteFriendReq
	7,  // 12: pbFriend.Friend.GetFriendList:input_type -> pbFriend.GetFriendListReq
	2,  // 13: pbFriend.Friend.AddFriend:output_type -> pbFriend.AddFriendResp
	4,  // 14: pbFriend.Friend.AddFriendResponse:output_type -> pbFriend.AddFriendResponseResp
	6,  // 15: pbFriend.Friend.DeleteFriend:output_type -> pbFriend.DeleteFriendResp
	8,  // 16: pbFriend.Friend.GetFriendList:output_type -> pbFriend.GetFriendListResp
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_friend_friend_proto_init() }
func file_friend_friend_proto_init() {
	if File_friend_friend_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_friend_friend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_friend_friend_proto_goTypes,
		DependencyIndexes: file_friend_friend_proto_depIdxs,
		MessageInfos:      file_friend_friend_proto_msgTypes,
	}.Build()
	File_friend_friend_proto = out.File
	file_friend_friend_proto_rawDesc = nil
	file_friend_friend_proto_goTypes = nil
	file_friend_friend_proto_depIdxs = nil
}
